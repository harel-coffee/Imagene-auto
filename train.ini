[paths]
save_dir = ./

[modes]
; model options ['DecisionTree','LinearRegression', 'LinearModel' , 'LASSO', 'multiTaskLASSO', 'multiTaskLinearModel', 'RandomForest','DecisionTreeClassifier', 'MLPClassifier', 'LogisticRegression']
model = RandomForest
; mode ['Train','predict', 'validate']
mode = Train
test_size = 0.2
save = True
;True, False
grid_search = False
cv = 3
scoring = neg_mean_squared_error
; data_type and label_type options ['imaging','gene']
data_type = imaging
label_type = gene
; normalize options ['none', 'min_max' , 'Stand_scaler' , 'zscore', 'MaxAbsScaler']
data_normalize_method = Stand_scaler
label_normalize_method = none
select_data_headers_for_predict = []
select_label_headers_for_predict = []
; correlation_method [spearman, pearson]
correlation_method = pearson
correlation_threshold = -1.0
; pVal_adjust_method ['holm', 'hochberg', 'hommel', 'bonferroni', 'BH', 'BY', 'fdr', 'none']
pVal_adjust_method = none

[RandomForest]

[multiTaskLinearModel]

[MLPClassifier]

[LogisticRegression]

[DecisionTreeClassifier]

[RandomForest_grid]
max_depth = 5, 10, 20
n_estimators = 100, 200, 300
bootstrap = [True]

[multiTaskLinearModel_grid]

[MLPClassifier_grid]

[LogisticRegression_grid]


[DecisionTreeClassifier_grid]
